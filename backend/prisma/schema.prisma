// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model user {
  id               Int           @id @default(autoincrement())
  first_name       String
  middle_name      String?
  last_name        String
  email            String        @unique
  contact          String        @unique
  password         String
  birthdate        String
  years_experience String?
  datetime_created DateTime?     @default(now())
  application      application[]
}

model job_listing {
  id               Int             @id @default(autoincrement())
  job_title        String
  address          String
  employment_type  EmploymentType?
  penv             Penv?
  job_desc         String          @db.VarChar(1000)
  job_quali        String          @db.VarChar(1000)
  job_responsb     String          @db.VarChar(1000)
  benefits         String          @db.VarChar(1000)
  salary           Float
  datetime_created DateTime        @default(now())
  application      application[]
}

model announcements {
  id               Int      @id @default(autoincrement())
  title            String
  description      String
  date             String
  time             String?
  datetime_created DateTime @default(now())
}

model application {
  id                           Int            @id @default(autoincrement())
  job_listingId                Int
  applicantId                  Int
  status                       Status?
  type_interview               TypeInterview?
  job_applied                  job_listing    @relation(fields: [job_listingId], references: [id])
  applicant                    user           @relation(fields: [applicantId], references: [id])
  initial_done_date            String?
  final_done_date              String?
  initial_interview_date       String?
  final_interview_date         String?
  final_requirements_done_date String?
  intial_stars                 Int?
  final_stars                  Int?
  intitial_message             String?        @db.VarChar(500)
  final_message                String?        @db.VarChar(500)
  datetime_created             DateTime       @default(now())

  @@index([job_listingId])
  @@index([applicantId])
}

model interviewer {
  id               Int      @id @default(autoincrement())
  username         String   @unique
  password         String
  rating           Float
  datetime_created DateTime @default(now())
}

enum EmploymentType {
  PART_TIME
  FULL_TIME
}

enum LevelExpertise {
  BEGINNER
  JUNIOR
  SENIOR
}

enum Penv {
  ONSITE
  WFH
}

enum Status {
  PENDING
  REJECTED
  COMPLETED
}

enum TypeInterview {
  INITIAL_INTERVIEW
  FINAL_INTERVIEW
  SUBMISSION_DOCUMENTS
}
